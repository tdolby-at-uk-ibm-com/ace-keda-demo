apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: ace-keda-demo-build
spec:
  # The security and environment settings are needed for OpenShift in a non-default
  # namespace such as cp4i. Kaniko is expecting to be root in the container.
  stepTemplate:
    securityContext:
      runAsUser: 0
    env:
      - name: "HOME"
        value: "/tekton/home"
      - name: "LICENSE"
        value: "accept"
  params:
    - name: outputRegistry
      type: string
    - name: url
      type: string
    - name: revision
      type: string
    - name: runtimeBaseImage
      type: string
  results:
    - name: tag
      description: image tag of the form 20240220135127-6fe9106
  steps:
    - name: clone
      image: gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.18.1
      script: |
        #!/bin/sh
        set -x
        set -e # Fail on error
        cd /work
        git clone -b $(params.revision) $(params.url)
        cd ace-keda-demo
        export DATE=$(date '+%Y%m%d%H%M%S')
        export COMMIT=$(git log -1 --pretty=%h)
        export TAG="$DATE"-"$COMMIT"
        echo Setting container tag to "$TAG"
        echo -n "$TAG" > $(results.tag.path)

        # Slightly hacky but works . . . 
        chmod -R 777 /work/ace-keda-demo
      volumeMounts:
        - mountPath: /work
          name: work
    - name: ibmint-build
      image: $(params.runtimeBaseImage)
      #image: cp.icr.io/cp/appc/ace:12.0.11.0-r1
      #
      # Runs the build and unit test phases, leaving the results in the work directory
      # for later steps.
      #
      script: |
        #!/bin/bash
        
        export LICENSE=accept
        . /opt/ibm/ace-13/server/bin/mqsiprofile
        
        set -e # Fail on error - this must be done after the profile in case the container has the profile loaded already

        cd /work/ace-keda-demo
        mkdir -p /work/ibmint-output/home/aceuser
        mqsicreateworkdir /work/ibmint-output/home/aceuser/ace-server
        # Using --compile-maps-and-schemas for 12.0.11 and later . . . 
        ibmint deploy --input-path . --output-work-directory /work/ibmint-output/home/aceuser/ace-server --project ConsumeMQ --project DefaultPolicies --compile-maps-and-schemas 
        ibmint optimize server --work-dir /work/ibmint-output/home/aceuser/ace-server --disable NodeJS
      volumeMounts:
        - mountPath: /work
          name: work
    - name: next-stage-container-setup
      image: $(params.runtimeBaseImage)
      script: |
        #!/bin/bash
        cd /work/ibmint-output
        cp /work/ace-keda-demo/demo-infrastructure/ace-startup-script.sh home/aceuser/ace-server/ace-startup-script.sh
        chmod -R 777 .
        echo ========================================================================
        echo Create tar file of server contents
        echo ========================================================================
        # Must have the full directory tree from / in the tar file
        tar -cvzf /work/crane-append-file.tar.gz home

        cd /work
        unset LD_LIBRARY_PATH
        aria2c -o go-containerregistry_Linux_x86_64.tar.gz https://github.com/google/go-containerregistry/releases/download/v0.20.1/go-containerregistry_Linux_x86_64.tar.gz
        tar -xzvf go-containerregistry_Linux_x86_64.tar.gz
        chmod 775 /work/crane
      volumeMounts:
        - mountPath: /work
          name: work
    - name: crane-push
      image: $(params.runtimeBaseImage)
      # specifying DOCKER_CONFIG is required to allow buildah to detect docker credential
      env:
        - name: "DOCKER_CONFIG"
          value: "/tekton/home/.docker/"
      script: |
        date
        export TAG=`cat $(results.tag.path)`
        echo Using $TAG as image tag
        
        echo ========================================================================
        echo Appending server contents tar file to create new image
        echo ========================================================================
        /work/crane append -b $(params.runtimeBaseImage) -f /work/crane-append-file.tar.gz -t $(params.outputRegistry)/ace-keda-demo-base:$TAG
        /work/crane mutate --env "LICENSE=accept" --entrypoint='bash,-c,"/home/aceuser/ace-server/ace-startup-script.sh && IntegrationServer -w /home/aceuser/ace-server"' $(params.outputRegistry)/ace-keda-demo-base:$TAG -t $(params.outputRegistry)/ace-keda-demo:$TAG
        date
      volumeMounts:
        - mountPath: /work
          name: work
  volumes:
    - name: work
      emptyDir: {}
